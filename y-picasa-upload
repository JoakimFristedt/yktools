#!/bin/bash
#=======================================================================================================================
# Description
#   Script for automated upload of photos to picasa
# Requires
#   ImageMagick
#   googlecl (http://code.google.com/p/googlecl/)
# Synopsis
#   y-picasa-upload [options] picture_dir album_name
#     options     - any combination of B, D, R, U, W, b, s
#     picture_dir - directory with photos. Mandatory
#     album_name  - name of the destination Picasa album
#=======================================================================================================================

# Setup vars
pic_size=1600                                                      # Max size of the pictures to upload
file_watermark_white="$HOME/Pictures/Misc/dk-watermark-white.png"  # Default watermark file
file_watermark_black="$HOME/Pictures/Misc/dk-watermark-black.png"  # Black watermark file
file_watermark_small="$HOME/Pictures/Misc/dk-watermark-small.png"  # 'Small' watermark file
picasa_owner="dmitry.kann"                                         # Owner of the Picasa account

#-----------------------------------------------------------------------------------------------------------------------
# Functions
#-----------------------------------------------------------------------------------------------------------------------


# Logs a message
# Parameters:
#   1 - message
log() {
  echo "$(date +%H:%M:%S)  $1"
}

# Logs a normal message
# Parameters:
#   1 - message
info() {
  log "   $1"
}

# Logs a success message
# Parameters:
#   1 - message
ok() {
  log "+  $1"
}

# Logs a failure message
# Parameters:
#   1 - message
err() {
  log "-  $1"
  exit 1
}

# Displays usage info and exits
# Parameters:
#   1 - error message (if any)
usage() {
  [ -z "$1" ] || log "-  $1"
  cat << EOF
Usage: $0 [options] photos_dir album_name
Options:
  -B  Do not add a black border to the image
  -D  Do not delete the photos after uploading (leave them in the source dir)
  -R  Do not resize photos to $pic_size pixels
  -U  Do not upload the photos to Picasa (implies -D)
  -W  Do not watermark images
  -b  Use black watermark instead of the default white one
  -s  Use "small" watermark instead of the default one (more appropriate for smaller images)

album_name is mandatory unless -U is specified.
EOF
  exit 2
}

#-----------------------------------------------------------------------------------------------------------------------
# Main routine
#-----------------------------------------------------------------------------------------------------------------------

# Parse command line options
b_delete=1
b_resize=1
b_watermark=1
b_upload=1
s_watermark_to_use="$file_watermark_white"
s_border_options="-bordercolor black -border 2"

args=$(getopt -o BDRUWbs -- "$@")
[ $? -ne 0 ] && usage
eval set -- $args
for i; do
  case "$i" in
    -B)
      unset s_border_options
      shift
      ;;
    -D)
      b_delete=0
      shift
      ;;
    -R)
      b_resize=0
      shift
      ;;
    -U)
      b_delete=0
      b_upload=0
      shift
      ;;
    -W)
      b_watermark=0
      shift
      ;;
    -b)
      s_watermark_to_use="$file_watermark_black"
      shift
      ;;
    -s)
      s_watermark_to_use="$file_watermark_small"
      shift
      ;;
    --)
      shift;
      break
      ;;    
  esac
done

# Parse the rest of the command line
dir_photos="$1"
picasa_album_name="$2"

# Check photos_dir
[ ! -z "$dir_photos" ] || usage "Directory for photos is not specified"
[ -d "$dir_photos" ]   || err "Directory '$dir_photos' does not exist."

# Check album_name
[ $b_upload -eq 0 ] || [ ! -z "$picasa_album_name" ] || usage "Album name is not specified"

[ $b_resize -ne 0 ] && convert_flags="-resize $pic_size"

find "$dir_photos" -type f \( -iname '*.jpg' -o -iname '*.png' \) ! -name '*.picasaweb.*' -print |
  sort |
  while read src_file; do
    file_ext=$(echo ${src_file##*.} | tr '[:upper:]' '[:lower:]')
    dst_file=${src_file%\.*}.picasaweb.$file_ext
    info "Processing $src_file -> $dst_file"
    # If it's a JPEG file, try to fetch image caption
    if [ $file_ext == 'jpg' ]; then
      img_caption=$(jhead "$src_file" | sed -n 's/Caption       : //p')
    else
      unset img_caption
    fi
    # Resize and autorotate the image, add a border if needed
    convert $convert_flags -quality 90 -auto-orient $s_border_options "$src_file" "$dst_file" &&
      # Apply watermark      
      ( [ $b_watermark -eq 0 ] || composite -blend 90% -gravity southeast "$s_watermark_to_use" "$dst_file" "$dst_file" ) &&
      # Upload the picture
      ( [ $b_upload -eq 0 ] || google picasa post "$picasa_album_name" "$dst_file" --owner "$picasa_owner" --summary "$img_caption") &&
      # Remove the handled picture
      ( [ $b_delete -eq 0 ] || rm -f "$dst_file" )
  done

